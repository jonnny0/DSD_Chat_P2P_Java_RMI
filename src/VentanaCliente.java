
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.rmi.RemoteException;
import javax.swing.AbstractAction;
import javax.swing.Action;

public class VentanaCliente extends javax.swing.JFrame {

    private final InterfaceCliente cliente1;
    private final String nombreCliente1;
    private final InterfaceCliente cliente2;
    private final String nombreCliente2;
    private final VentanaInicio ventanaInicio;

    public VentanaCliente(String nombreCliente1, InterfaceCliente cliente1, String nombreCliente2, InterfaceCliente cliente2, VentanaInicio ventanaInicio) {
        initComponents();
        this.cliente1 = cliente1;
        this.nombreCliente1 = nombreCliente1;
        this.cliente2 = cliente2;
        this.nombreCliente2 = nombreCliente2;
        this.ventanaInicio = ventanaInicio;

        this.setTitle("Cliente: " + nombreCliente1 + " --- Chat privado con: " + nombreCliente2);

        listenerCerrarVentana();

        //para poder mandar con el intro 
        mandarMensaje.addActionListener(intro);
        
        //para que al iniciar el foco lo tenga el envío de mensajes
        mandarMensaje.requestFocus();
    }
    
    /**
     * Al cerra la ventana se borran los datos del cliente asociado a esta
     */
    public void listenerCerrarVentana() {
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                ventanaInicio.cerrarConversacion(nombreCliente2);
            }

        });
    }

    /**
     * Actualiza la lista de mensajes
     * @param mensaje El nuevo mensaje
     */
    public void actualizarMensajes(String mensaje) {
        listaMensajes.append(mensaje + "\n");
    }

    /**
     * Manda el mensaje al cliente de la ventana, si no está ya disponible lo indica
     */
    private void mandarMensaje() {
        if (!mandarMensaje.getText().equals("")) {
            try {
                String mensaje = nombreCliente1 + ": " + mandarMensaje.getText();
                cliente2.recibirMensaje(nombreCliente1, cliente1, mensaje);
                actualizarMensajes(mensaje);

            } catch (RemoteException ex) {
                actualizarMensajes("El usuario " + nombreCliente2 + " se ha desconectado.");
            }
            mandarMensaje.setText("");
            mandarMensaje.requestFocus();
        }

    }

    /**
     * Manda el mensaje al pulsar intro
     */
    Action intro = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            mandarMensaje();
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etiquetaListaMensajes = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaMensajes = new javax.swing.JTextArea();
        etiquetaEscribirMensaje = new javax.swing.JLabel();
        mandarMensaje = new javax.swing.JTextField();
        botonMandarMensaje = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        etiquetaListaMensajes.setText("Lista de mensajes:");

        listaMensajes.setEditable(false);
        listaMensajes.setColumns(20);
        listaMensajes.setRows(5);
        listaMensajes.setFocusable(false);
        jScrollPane1.setViewportView(listaMensajes);

        etiquetaEscribirMensaje.setText("Mensaje:");

        botonMandarMensaje.setText("Enviar");
        botonMandarMensaje.setToolTipText("");
        botonMandarMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMandarMensajeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(etiquetaEscribirMensaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mandarMensaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonMandarMensaje))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiquetaListaMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(etiquetaListaMensajes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mandarMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonMandarMensaje)
                    .addComponent(etiquetaEscribirMensaje))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonMandarMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMandarMensajeActionPerformed
        mandarMensaje();
    }//GEN-LAST:event_botonMandarMensajeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonMandarMensaje;
    private javax.swing.JLabel etiquetaEscribirMensaje;
    private javax.swing.JLabel etiquetaListaMensajes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea listaMensajes;
    private javax.swing.JTextField mandarMensaje;
    // End of variables declaration//GEN-END:variables
}
